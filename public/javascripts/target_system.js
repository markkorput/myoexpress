// Generated by CoffeeScript 1.6.3
(function() {
  var TargetCollection, TargetModel;

  TargetModel = Backbone.Model.extend({
    initialize: function() {}
  });

  TargetCollection = Backbone.Collection.extend({
    model: TargetModel
  });

  this.TargetSystem = Backbone.Model.extend({
    initialize: function(opts) {
      var _this = this;
      this.myo_recorder = this.get('myo_recorder');
      this.targets = new TargetCollection();
      this.newTarget();
      this.myo_recorder.on('add', function(myo_record) {
        return myo_record.set({
          target: _this.activeTarget().get('name')
        });
      });
      if (this.get('autoNextTarget')) {
        return this.myo_recorder.on('add', function(myo_record) {
          if (_this.get('maxTargets') && _this.targets.length < _this.get('maxTargets')) {
            return _this.newTarget();
          } else {
            return _this.nextTarget();
          }
        });
      }
    },
    newTarget: function() {
      this.targets.add({
        name: 'Target #' + (this.targets.length + 1)
      });
      return this.set({
        activeTargetIndex: this.targets.length - 1
      });
    },
    activeTarget: function() {
      return this.targets.at(this.get('activeTargetIndex'));
    },
    prevTarget: function() {
      return this.set({
        activeTargetIndex: Math.abs((this.get('activeTargetIndex') - 1) % this.targets.length)
      });
    },
    nextTarget: function() {
      return this.set({
        activeTargetIndex: Math.abs((this.get('activeTargetIndex') + 1) % this.targets.length)
      });
    }
  });

}).call(this);
