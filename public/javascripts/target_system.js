// Generated by CoffeeScript 1.6.3
(function() {
  var TargetCollection, TargetModel;

  TargetModel = Backbone.Model.extend({
    initialize: function() {}
  });

  TargetCollection = Backbone.Collection.extend({
    model: TargetModel
  });

  this.TargetSystem = (function() {
    function TargetSystem(opts) {
      var _this = this;
      this.options = opts;
      this.myo_recorder = this.options.myo_recorder;
      this.targets = new TargetCollection();
      this.newTarget();
      this.myo_recorder.on('add', function(myo_record) {
        return myo_record.set({
          target: _this.activeTarget().get('name')
        });
      });
    }

    TargetSystem.prototype.newTarget = function() {
      this.targets.add({
        name: 'Target #' + (this.targets.length + 1)
      });
      return this.activeTargetIndex = this.targets.length - 1;
    };

    TargetSystem.prototype.activeTarget = function() {
      return this.targets.at(this.activeTargetIndex);
    };

    TargetSystem.prototype.prevTarget = function() {
      this.activeTargetIndex -= 1;
      if (this.activeTargetIndex < 0) {
        return this.activeTargetIndex = this.targets.length - 1;
      }
    };

    TargetSystem.prototype.nextTarget = function() {
      this.activeTargetIndex += 1;
      if (this.activeTargetIndex >= this.target.length) {
        return this.activeTargetIndex = 0;
      }
    };

    return TargetSystem;

  })();

}).call(this);
